version: '3'

services:
  traefik:
    image: traefik:latest
    container_name: internal-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
      - zero-trust
    ports:
      - 80:80
      - 443:443
    environment:
      CF_API_EMAIL: $CF_API_EMAIL
      CF_DNS_API_TOKEN: $CF_DNS_API_TOKEN
      CF_ZONE_API_TOKEN: $CF_ZONE_API_TOKEN
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
      - ./data/config.yml:/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=${TRAEFIK_MAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=${TRAEFIK_SANS}"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      # Enable Watchtower
      - "com.centurylinklabs.watchtower.enable=true"

  db:
    image: mariadb
    container_name: wordpress-mysql
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWD}  # Requested, set the root's password of MySQL service.
      - MYSQL_PASSWORD=${DB_PASSWD}
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_LOG_CONSOLE=true
    networks:
      - wordpress-iso
    labels:
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=true"

  wordpress:
    image: wordpress:latest
    container_name: wordpress
    restart: unless-stopped
    volumes:
      - ./html:/var/www/html
    networks:
      - proxy
      - wordpress-iso
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`${TRAEFIK_WORDPRESS}`)"
      - "traefik.http.routers.wordpress.entrypoints=https"
      - "traefik.http.routers.wordpress.tls=true"
      - "traefik.http.routers.wordpress.tls.certresolver=mydnschallenge"
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=true"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${CF_TUNNEL_TOKEN}
    networks:
      - zero-trust #a name for the Cloudflare Network
    restart: unless-stopped
    labels:
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      #- WATCHTOWER_MONITOR_ONLY=true
      #- WATCHTOWER_POLL_INTERVAL=30
      - WATCHTOWER_SCHEDULE=0 0 4 * * MON
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

networks:
  wordpress-iso:
    driver: bridge
  proxy:
    external: true
  zero-trust:
    external: true